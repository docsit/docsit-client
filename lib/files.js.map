{"version":3,"sources":["../src/files.js"],"names":["saveFilesInDirectory","ipfsClient","files","arrayOfFiles","add","wrapWithDirectory","directoryIndex","findIndex","path","directory","splice","getFile","cid","get","listFilesInDirectory","ls"],"mappings":";;;;;;;AAAA;;;;;AAKO,MAAMA,oBAAoB,GAAG,OAAOC,UAAP,EAAmBC,KAAnB,KAA6B;AAC/D;AACA;AACA,QAAMC,YAAY,GAAG,MAAMF,UAAU,CAACG,GAAX,CAAeF,KAAf,EAAsB;AAAEG,IAAAA,iBAAiB,EAAE;AAArB,GAAtB,CAA3B;AACA,QAAMC,cAAc,GAAGH,YAAY,CAACI,SAAb,CAAuB,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAcA,IAAI,KAAK,EAA9C,CAAvB;AACA,QAAM,CAACC,SAAD,IAAcN,YAAY,CAACO,MAAb,CAAoBJ,cAApB,EAAoC,CAApC,CAApB;AACA,SAAO;AAAEG,IAAAA,SAAF;AAAaP,IAAAA,KAAK,EAAEC;AAApB,GAAP;AACD,CAPM;AASP;;;;;;;;;AAKO,MAAMQ,OAAO,GAAG,CAACV,UAAD,EAAaW,GAAb,KAAqBX,UAAU,CAACY,GAAX,CAAeD,GAAf,CAArC,C,CAA0D;;AAEjE;;;;;;;;;AAKO,MAAME,oBAAoB,GAAG,CAACb,UAAD,EAAaW,GAAb,KAAqBX,UAAU,CAACc,EAAX,CAAcH,GAAd,CAAlD,C,CAAsE","sourcesContent":["/**\n * Saves array of files to IPFS wrapped in a directory\n * @param {Array<{path: string, content: Buffer}>} files\n * @returns {Array<{path: string, hash: string, size: number}>} The CID of the directory that wraps the files uploaded\n */\nexport const saveFilesInDirectory = async (ipfsClient, files) => {\n  // Infura client is the only one available that allows the upload of files\n  // TODO add support for mime types\n  const arrayOfFiles = await ipfsClient.add(files, { wrapWithDirectory: true });\n  const directoryIndex = arrayOfFiles.findIndex(({ path }) => path === '');\n  const [directory] = arrayOfFiles.splice(directoryIndex, 1);\n  return { directory, files: arrayOfFiles };\n};\n\n/**\n * Get the content of files content from CID\n * @param {string} cid\n * @returns {Array<{path: string, content: Buffer}>} An array with the path and contents of files\n */\nexport const getFile = (ipfsClient, cid) => ipfsClient.get(cid); // Infura and ipfs.io clients allow file download\n\n/**\n * Lists file information from directory CID\n * @param {string} cid\n * @returns {Array<{name: string, path: string, size: number, hash: string, type: string, depth: number}>} An array of information about each file in a directory\n */\nexport const listFilesInDirectory = (ipfsClient, cid) => ipfsClient.ls(cid); // ipfs.io client is the only one available that allows the listing of directories"],"file":"files.js"}