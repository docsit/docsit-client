{"version":3,"sources":["../src/files.js"],"names":["saveFilesInDirectory","ipfsClient","files","arrayOfFiles","add","wrapWithDirectory","directoryIndex","findIndex","path","directory","splice","getFile","cid","get","listFilesInDirectory","ls"],"mappings":"qJAAA;;;;GAKO,KAAMA,CAAAA,oBAAoB,CAAG,MAAOC,CAAP,CAAmBC,CAAnB,GAA6B,CAC/D;AACA;AAF+D,KAGzDC,CAAAA,CAAY,CAAG,KAAMF,CAAAA,CAAU,CAACG,GAAX,CAAeF,CAAf,CAAsB,CAAEG,iBAAiB,GAAnB,CAAtB,CAHoC,CAIzDC,CAAc,CAAGH,CAAY,CAACI,SAAb,CAAuB,CAAC,CAAEC,IAAI,CAAJA,CAAF,CAAD,GAAuB,EAAT,GAAAA,CAArC,CAJwC,CAKzD,CAACC,CAAD,EAAcN,CAAY,CAACO,MAAb,CAAoBJ,CAApB,CAAoC,CAApC,CAL2C,CAM/D,MAAO,CAAEG,SAAS,CAATA,CAAF,CAAaP,KAAK,CAAEC,CAApB,CACR,CAPM,CASP;;;;qDAKO,KAAMQ,CAAAA,OAAO,CAAG,CAACV,CAAD,CAAaW,CAAb,GAAqBX,CAAU,CAACY,GAAX,CAAeD,CAAf,CAArC,CAA0D;AAEjE;;;;2BAKO,KAAME,CAAAA,oBAAoB,CAAG,CAACb,CAAD,CAAaW,CAAb,GAAqBX,CAAU,CAACc,EAAX,CAAcH,CAAd,CAAlD,CAAsE","sourcesContent":["/**\n * Saves array of files to IPFS wrapped in a directory\n * @param {Array<{path: string, content: Buffer}>} files\n * @returns {Array<{path: string, hash: string, size: number}>} The CID of the directory that wraps the files uploaded\n */\nexport const saveFilesInDirectory = async (ipfsClient, files) => {\n  // Infura client is the only one available that allows the upload of files\n  // TODO add support for mime types\n  const arrayOfFiles = await ipfsClient.add(files, { wrapWithDirectory: true });\n  const directoryIndex = arrayOfFiles.findIndex(({ path }) => path === '');\n  const [directory] = arrayOfFiles.splice(directoryIndex, 1);\n  return { directory, files: arrayOfFiles };\n};\n\n/**\n * Get the content of files content from CID\n * @param {string} cid\n * @returns {Array<{path: string, content: Buffer}>} An array with the path and contents of files\n */\nexport const getFile = (ipfsClient, cid) => ipfsClient.get(cid); // Infura and ipfs.io clients allow file download\n\n/**\n * Lists file information from directory CID\n * @param {string} cid\n * @returns {Array<{name: string, path: string, size: number, hash: string, type: string, depth: number}>} An array of information about each file in a directory\n */\nexport const listFilesInDirectory = (ipfsClient, cid) => ipfsClient.ls(cid); // ipfs.io client is the only one available that allows the listing of directories"],"file":"files.js"}