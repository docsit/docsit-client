{"version":3,"sources":["../src/encryption.js"],"names":["process","release","name","window","crypto","require","utf8StringToArray","str","TypeError","textEncoder","TextEncoder","encode","arrayToUtf8String","array","Array","isArray","ArrayBuffer","isView","TextDecoder","decode","hexStringToBuffer","hex","length","RangeError","Uint8Array","i","parseInt","substring","bufferToHexString","reduce","accumulated","next","toString","padStart","generateKey","magic","password","hexMagic","keyBuffer","subtle","digest","cryptoKey","importKey","encryptMultiple","unencryptedArray","getRandomValues","encryptedArray","Promise","all","map","unencryptedText","encryptedBuffer","encrypt","iv","decryptMultiple","decryptedArray","encryptedText","decryptedBuffer","decrypt","err","error","Error","code","orginalError"],"mappings":"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","sourcesContent":["if (typeof process !== 'undefined' && process.release.name === 'node') {\n  // eslint-disable-next-line\n  var window = { crypto: require('@trust/webcrypto') };\n}\n\nexport const utf8StringToArray = str => {\n  if (typeof str !== 'string') throw new TypeError('Expected input to be a string');\n  const textEncoder = new TextEncoder('utf-8');\n  return textEncoder.encode(str);\n};\n\nexport const arrayToUtf8String = array => {\n  if (!Array.isArray(array) && !ArrayBuffer.isView(array))\n    throw new TypeError('Expected input to be array');\n  const textEncoder = new TextDecoder('utf-8');\n  return textEncoder.decode(array);\n};\n\nexport const hexStringToBuffer = hex => {\n  if (typeof hex !== 'string') throw new TypeError('Expected input to be a string');\n  if (hex.length % 2 !== 0)\n    throw new RangeError('Expected string to be an even number of characters');\n\n  const array = new Uint8Array(hex.length / 2);\n  for (let i = 0; i < hex.length; i += 2) {\n    array[i / 2] = parseInt(hex.substring(i, i + 2), 16);\n  }\n  return array;\n};\n\nexport const bufferToHexString = array => {\n  if (!Array.isArray(array) && !ArrayBuffer.isView(array))\n    throw new TypeError('Expected input to be array');\n  return array.reduce((accumulated, next) => accumulated + next.toString(16).padStart(2, '0'), '');\n};\n\nexport const generateKey = async (magic, password) => {\n  const hexMagic = bufferToHexString(magic);\n  const saltedPassword = `${hexMagic};${password}`;\n  const keyBuffer = await window.crypto.subtle.digest(\n    { name: 'SHA-256' },\n    utf8StringToArray(saltedPassword)\n  ); // TODO: Remove the object for correct web implementation\n  const cryptoKey = await window.crypto.subtle.importKey(\n    'raw',\n    keyBuffer,\n    { name: 'AES-CBC' },\n    true,\n    ['encrypt', 'decrypt']\n  );\n  return cryptoKey;\n};\n\nexport const encryptMultiple = async (unencryptedArray, password) => {\n  const magic = window.crypto.getRandomValues(new Uint8Array(16));\n  const cryptoKey = await generateKey(magic, password);\n  const encryptedArray = await Promise.all(\n    unencryptedArray.map(async unencryptedText => {\n      const encryptedBuffer = await window.crypto.subtle.encrypt(\n        { name: 'AES-CBC', iv: magic },\n        cryptoKey,\n        utf8StringToArray(unencryptedText)\n      );\n      return bufferToHexString(new Uint8Array(encryptedBuffer));\n    })\n  );\n  return {\n    hexMagic: bufferToHexString(magic),\n    encryptedArray,\n  };\n};\n\nexport const decryptMultiple = async (encryptedArray, hexMagic, password) => {\n  const magic = hexStringToBuffer(hexMagic);\n  const cryptoKey = await generateKey(magic, password);\n  const decryptedArray = await Promise.all(\n    encryptedArray.map(async encryptedText => {\n      try {\n        const decryptedBuffer = await window.crypto.subtle.decrypt(\n          { name: 'AES-CBC', iv: magic },\n          cryptoKey,\n          hexStringToBuffer(encryptedText)\n        );\n        return arrayToUtf8String(new Uint8Array(decryptedBuffer));\n      } catch (err) {\n        const error = new Error('Wrong password.');\n        error.code = 'WRONG_PASSWORD';\n        error.orginalError = err;\n        throw error;\n      }\n    })\n  );\n  return decryptedArray;\n};\n"],"file":"encryption.js"}