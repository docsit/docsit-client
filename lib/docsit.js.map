{"version":3,"sources":["../src/docsit.js"],"names":["Docsit","constructor","web3","contract","ipfsClient","accountPrivateKey","localStorage","getItem","eth","accounts","privateKeyToAccount","privateKey","create","setItem","getDocument","id","options","getAttachment","cid","issueDocument","body","data","attachments"],"mappings":";;;;;;;AACA;;AACA;;AACA;;AACA;;;;AAJA;AAMA,MAAMA,MAAN,CAAa;AACXC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,IAAL,GAAY,mBAAZ;AACA;;AACA,SAAKC,QAAL,GAAgB,uBAAuB,KAAKD,IAA5B,CAAhB;AACA;;AACA,SAAKE,UAAL,GAAkB,oBAAlB;AAEA;;AACA,UAAMC,iBAAiB,GAAGC,YAAY,IAAIA,YAAY,CAACC,OAAb,CAAqB,0BAArB,CAA1C;;AACA,QAAIF,iBAAJ,EAAuB;AACrB,WAAKH,IAAL,CAAUM,GAAV,CAAcC,QAAd,CAAuBC,mBAAvB,CAA2CL,iBAA3C;AACA;AACD;;AACD,UAAM;AAAEM,MAAAA;AAAF,QAAiB,KAAKT,IAAL,CAAUM,GAAV,CAAcC,QAAd,CAAuBG,MAAvB,EAAvB;AACA,QAAIN,YAAJ,EAAkBA,YAAY,CAACO,OAAb,CAAqBF,UAArB;AACnB;;AAEDG,EAAAA,WAAW,CAACC,EAAD,EAAKC,OAAL,EAAc;AACvB,WAAO,4BAAY,KAAKb,QAAjB,EAA2B,KAAKC,UAAhC,EAA4CW,EAA5C,EAAgDC,OAAhD,CAAP;AACD;;AAEDC,EAAAA,aAAa,CAACC,GAAD,EAAM;AACjB,WAAO,8BAAc,KAAKd,UAAnB,EAA+Bc,GAA/B,CAAP;AACD;;AAEDC,EAAAA,aAAa,CAACC,IAAD,EAAOC,IAAP,EAAaC,WAAb,EAA0B;AACrC,WAAO,8BAAc,KAAKnB,QAAnB,EAA6B,KAAKC,UAAlC,EAA8CgB,IAA9C,EAAoDC,IAApD,EAA0DC,WAA1D,CAAP;AACD;;AA7BU;;eAgCEtB,M","sourcesContent":["/** @module @docsit/client */\nimport createWeb3Instance from './web3';\nimport createContractInstance from './contract';\nimport createIpfsClient from './ipfs';\nimport { getDocument, getAttachment, issueDocument } from './documents';\n\nclass Docsit {\n  constructor() {\n    /** @private */\n    this.web3 = createWeb3Instance();\n    /** @private */\n    this.contract = createContractInstance(this.web3);\n    /** @private */\n    this.ipfsClient = createIpfsClient();\n\n    /* Setup Ethereum account */\n    const accountPrivateKey = localStorage && localStorage.getItem('docsitEthereumPrivateKey');\n    if (accountPrivateKey) {\n      this.web3.eth.accounts.privateKeyToAccount(accountPrivateKey);\n      return;\n    }\n    const { privateKey } = this.web3.eth.accounts.create();\n    if (localStorage) localStorage.setItem(privateKey);\n  }\n\n  getDocument(id, options) {\n    return getDocument(this.contract, this.ipfsClient, id, options);\n  }\n\n  getAttachment(cid) {\n    return getAttachment(this.ipfsClient, cid);\n  }\n\n  issueDocument(body, data, attachments) {\n    return issueDocument(this.contract, this.ipfsClient, body, data, attachments);\n  }\n}\n\nexport default Docsit;\n"],"file":"docsit.js"}