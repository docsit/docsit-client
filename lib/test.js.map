{"version":3,"sources":["../src/test.js"],"names":["test","web3","account","eth","accounts","privateKeyToAccount","defaultAccount","address","contract","response","methods","createOrganization","send","from","console","log"],"mappings":"gMAGA,KAAMA,CAAAA,IAAI,CAAG,SAAY,MACjBC,CAAAA,CAAI,CAAG,kBADU,CAEjBC,CAAO,CAAGD,CAAI,CAACE,GAAL,CAASC,QAAT,CAAkBC,mBAAlB,CACd,oEADc,CAFO,CAKvBJ,CAAI,CAACK,cAAL,CAAsBJ,CAAO,CAACK,OALP,MAMjBC,CAAAA,CAAQ,CAAG,sBAAuBP,CAAvB,CANM,CAOjBQ,CAAQ,CAAG,KAAMD,CAAAA,CAAQ,CAACE,OAAT,CACpBC,kBADoB,CACD,oCADC,EAEpBC,IAFoB,CAEf,CACJC,IAAI,CAAEX,CAAO,CAACK,OADV,CAFe,CAPA,CAYvBO,OAAO,CAACC,GAAR,CAAYN,CAAZ,CACD,CAbD,CAcAT,IAAI,E","sourcesContent":["import createWeb3Instance from './web3';\nimport createContractInstance from './contract';\n\nconst test = async () => {\n  const web3 = createWeb3Instance();\n  const account = web3.eth.accounts.privateKeyToAccount(\n    '0xF765D39737D97F9D03B56EF93F9EF526302B942853B2B13AC41DA538FA3E978B'\n  );\n  web3.defaultAccount = account.address;\n  const contract = createContractInstance(web3);\n  const response = await contract.methods\n    .createOrganization('General Contract Test Organization')\n    .send({\n      from: account.address,\n    });\n  console.log(response);\n};\ntest();\n"],"file":"test.js"}