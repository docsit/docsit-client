{"version":3,"sources":["../../src/test/ipfs.test.js"],"names":["describe","context","before","ipfsClient","it","response","get","Array","isArray","to","be","true","length","equal","path","content","toString"],"mappings":";;AAAA;;AAEA;;;;AAEAA,QAAQ,CAAC,sBAAD,EAAyB,MAAM;AACrC,QAAMC,OAAO,GAAG,EAAhB;AACAC,EAAAA,MAAM,CAAC,MAAM;AACXD,IAAAA,OAAO,CAACE,UAAR,GAAqB,oBAArB;AACD,GAFK,CAAN;AAGAC,EAAAA,EAAE,CAAC,oEAAD,EAAuE,YAAY;AACnF,UAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACE,UAAR,CAAmBG,GAAnB,CAAuB,sDAAvB,CAAvB;AACA,sBAAOC,KAAK,CAACC,OAAN,CAAcH,QAAd,CAAP,EAAgCI,EAAhC,CAAmCC,EAAnC,CAAsCC,IAAtC;AACA,sBAAON,QAAQ,CAACO,MAAhB,EAAwBH,EAAxB,CAA2BI,KAA3B,CAAiC,CAAjC;AACA,sBAAOR,QAAQ,CAAC,CAAD,CAAR,CAAYS,IAAnB,EAAyBL,EAAzB,CAA4BI,KAA5B,CAAkC,gDAAlC;AACA,sBAAOR,QAAQ,CAAC,CAAD,CAAR,CAAYU,OAAZ,CAAoBC,QAApB,CAA6B,MAA7B,CAAP,EAA6CP,EAA7C,CAAgDI,KAAhD,CAAsD,wBAAtD;AACD,GANC,CAAF;AAOD,CAZO,CAAR","sourcesContent":["import { expect } from 'chai';\n\nimport createIpfsClient from '../ipfs';\n\ndescribe('Describe ipfs module', () => {\n  const context = {};\n  before(() => {\n    context.ipfsClient = createIpfsClient();\n  });\n  it(\"should correctly establish a connection with Docsit's IPFS gateway\", async () => {\n    const response = await context.ipfsClient.get('/ipfs/QmZtmD2qt6fJot32nabSP3CUjicnypEBz7bHVDhPQt9aAy');\n    expect(Array.isArray(response)).to.be.true;\n    expect(response.length).to.equal(1);\n    expect(response[0].path).to.equal('QmZtmD2qt6fJot32nabSP3CUjicnypEBz7bHVDhPQt9aAy');\n    expect(response[0].content.toString('utf8')).to.equal('version 1 of my text\\n');\n  });\n});\n"],"file":"ipfs.test.js"}