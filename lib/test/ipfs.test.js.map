{"version":3,"sources":["../../src/test/ipfs.test.js"],"names":["describe","context","before","ipfsClient","it","response","get","Array","isArray","to","be","true","length","equal","path","content","toString"],"mappings":"gKAIAA,QAAQ,CAAC,sBAAD,CAAyB,IAAM,CACrC,KAAMC,CAAAA,CAAO,CAAG,EAAhB,CACAC,MAAM,CAAC,IAAM,CACXD,CAAO,CAACE,UAAR,CAAqB,mBACtB,CAFK,CAF+B,CAKrCC,EAAE,CAAC,oEAAD,CAAuE,SAAY,CACnF,KAAMC,CAAAA,CAAQ,CAAG,KAAMJ,CAAAA,CAAO,CAACE,UAAR,CAAmBG,GAAnB,CAAuB,sDAAvB,CAAvB,CACA,iBAAOC,KAAK,CAACC,OAAN,CAAcH,CAAd,CAAP,EAAgCI,EAAhC,CAAmCC,EAAnC,CAAsCC,IAF6C,CAGnF,iBAAON,CAAQ,CAACO,MAAhB,EAAwBH,EAAxB,CAA2BI,KAA3B,CAAiC,CAAjC,CAHmF,CAInF,iBAAOR,CAAQ,CAAC,CAAD,CAAR,CAAYS,IAAnB,EAAyBL,EAAzB,CAA4BI,KAA5B,CAAkC,gDAAlC,CAJmF,CAKnF,iBAAOR,CAAQ,CAAC,CAAD,CAAR,CAAYU,OAAZ,CAAoBC,QAApB,CAA6B,MAA7B,CAAP,EAA6CP,EAA7C,CAAgDI,KAAhD,CAAsD,wBAAtD,CACD,CANC,CAOH,CAZO,C","sourcesContent":["import { expect } from 'chai';\n\nimport createIpfsClient from '../ipfs';\n\ndescribe('Describe ipfs module', () => {\n  const context = {};\n  before(() => {\n    context.ipfsClient = createIpfsClient();\n  });\n  it(\"should correctly establish a connection with Docsit's IPFS gateway\", async () => {\n    const response = await context.ipfsClient.get('/ipfs/QmZtmD2qt6fJot32nabSP3CUjicnypEBz7bHVDhPQt9aAy');\n    expect(Array.isArray(response)).to.be.true;\n    expect(response.length).to.equal(1);\n    expect(response[0].path).to.equal('QmZtmD2qt6fJot32nabSP3CUjicnypEBz7bHVDhPQt9aAy');\n    expect(response[0].content.toString('utf8')).to.equal('version 1 of my text\\n');\n  });\n});\n"],"file":"ipfs.test.js"}