"use strict";var _chai=require("chai"),_encryption=require("../encryption");describe("Describe encryption module",()=>{it("correctly converts an 0 hex string to an array",async()=>{const a=(0,_encryption.hexStringToBuffer)("00000000000000000000000000000000");(0,_chai.expect)(a).to.eql(new Uint8Array(16))}),it("correctly converts a filled hex string to an array",async()=>{const a=(0,_encryption.hexStringToBuffer)("cbf3ebc2bf3f10480a47bdd51a544d1a");(0,_chai.expect)(a).to.eql(new Uint8Array([203,243,235,194,191,63,16,72,10,71,189,213,26,84,77,26]))}),it("correctly converts empty array to hex string",async()=>{const a=new Uint8Array(16),b=(0,_encryption.bufferToHexString)(a);(0,_chai.expect)(b).to.equal("00000000000000000000000000000000")}),it("correctly converts a filled array to hex string",async()=>{const a=new Uint8Array([203,243,235,194,191,63,16,72,10,71,189,213,26,84,77,26]),b=(0,_encryption.bufferToHexString)(a);(0,_chai.expect)(b).to.equal("cbf3ebc2bf3f10480a47bdd51a544d1a")}),it("correctly converts a utf8 string to an array",async()=>{const a="hola:jota",b=(0,_encryption.utf8StringToArray)("hola:jota");(0,_chai.expect)(b.length).to.equal("hola:jota".length);for(let c=0;c<a.length;c+=1)(0,_chai.expect)(b[c]).to.equal(a.charCodeAt(c))}),it("correctly converts an array to a utf8 string",async()=>{const a="hola:jota",b=new Uint8Array("hola:jota".length);for(let c=0;c<a.length;c+=1)b[c]=a.charCodeAt(c);const c=(0,_encryption.arrayToUtf8String)(b);(0,_chai.expect)(c).to.equal("hola:jota")}),it("correctly decrypts multiple string with the correct password",async()=>{const a=await(0,_encryption.decryptMultiple)(["aae515ea4bcfb574a549a5340f23829a","e5f095d3645fdb68b27952d84b76a6aa","23388186f1915d1635faa41c4fb255e5512b784bf1fb171dc6497719f4703a22623963fd51c7b743a8a1e2f136c57a34"],"1fae168d77f474896bae8537257dddfb","jota, pasame la sal");(0,_chai.expect)(a).to.eql(["# Title",JSON.stringify({hola:"jota"}),"QmT4n2a261NS1ekg6zfxhYGuojCQCkpQGhP8LPSeJkQcXU"])}),it("correctly encrypts and then decrypts multiple strings",async()=>{const a="# Title",b=JSON.stringify({hola:"jota"}),c="QmT4n2a261NS1ekg6zfxhYGuojCQCkpQGhP8LPSeJkQcXU",{hexMagic:d,encryptedArray:e}=await(0,_encryption.encryptMultiple)([a,b,c],"jota, pasame la sal"),[f,g,h]=await(0,_encryption.decryptMultiple)(e,d,"jota, pasame la sal");(0,_chai.expect)(f).to.equal(a),(0,_chai.expect)(g).to.equal(b),(0,_chai.expect)(h).to.equal(c)}),it("throws an error if multiple string are decrypted with invalid password",async()=>{const a=JSON.stringify({hola:"jota"}),{hexMagic:b,encryptedArray:c}=await(0,_encryption.encryptMultiple)(["# Title",a,"QmT4n2a261NS1ekg6zfxhYGuojCQCkpQGhP8LPSeJkQcXU"],"jota, pasame la sal");try{await(0,_encryption.decryptMultiple)(c,b,"jota, pasame el salero")}catch(a){(0,_chai.expect)(a.code).to.equal("WRONG_PASSWORD")}})});
//# sourceMappingURL=encryption.test.js.map